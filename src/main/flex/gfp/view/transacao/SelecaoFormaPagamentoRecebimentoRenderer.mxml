<?xml version = "1.0" encoding = "utf-8"?>
<mx:TileList xmlns:mx = "http://www.adobe.com/2006/mxml"
			 change = "changeHandler(event)"
			 itemRenderer = "gfp.view.transacao.FormaPagamentoRenderer"
			 rowCount = "1"
			 direction = "horizontal"
			 columnWidth = "120"
			 useHandCursor = "true"
			 buttonMode = "true">
	<mx:Script>
		<![CDATA[
			import gfp.model.Conta;
			import gfp.model.Lancamento;
			import gfp.service.ContaService;
			import gfp.type.ContaType;
			import gfp.type.FormaPagamentoType;
			
			import mx.collections.ArrayCollection;
			import mx.events.ListEvent;
			
			[Inject]
			public var contaService:ContaService;
			
			[Bindable]
			private var _dataProvider:ArrayCollection;
			
			private var _lancamento:Lancamento;
			
			public function init(lancamento:Lancamento):void
			{
				_lancamento = lancamento;
				_dataProvider = new ArrayCollection();
				
				for each (var conta:Conta in contaService.listaCompleta)
				{
					if ((!_lancamento.id && !conta.ativa) || (_lancamento.id && !conta
						.ativa && _lancamento.conta.id != conta.id))
					{
						continue;
					}
					
					if (conta.tipo == ContaType.CARTEIRA)
					{
						var dinheiro:Object = new Object();
						dinheiro.formaPagamento = FormaPagamentoType.DINHEIRO;
						dinheiro.descricao = "Dinheiro";
						dinheiro.conta = conta;
						_dataProvider.addItem(dinheiro);
					}
					else
					{
						if (conta.operaCheque)
						{
							var cheque:Object = new Object();
							cheque.formaPagamento = FormaPagamentoType.CHEQUE;
							cheque.descricao = "Cheque"
							cheque.conta = conta;
							_dataProvider.addItem(cheque);
						}
						
						if (conta.operaCartaoDebito)
						{
							var cartao:Object = new Object();
							cartao.formaPagamento = FormaPagamentoType.DEBITO;
							cartao.descricao = "Débito";
							cartao.conta = conta;
							_dataProvider.addItem(cartao);
						}
						
						if (conta.operaCartaoMastercard)
						{
							var mastercard:Object = new Object();
							mastercard.formaPagamento = FormaPagamentoType.CREDITO_MASTERCARD;
							mastercard.descricao = "Crédito Mastercard";
							mastercard.conta = conta;
							_dataProvider.addItem(mastercard);
						}
						
						if (conta.operaCartaoVisa)
						{
							var visa:Object = new Object();
							visa.formaPagamento = FormaPagamentoType.CREDITO_VISA;
							visa.descricao = "Crédito Visa";
							visa.conta = conta;
							_dataProvider.addItem(visa);
						}
					}
				}
				
				dataProvider = _dataProvider;
				setSelectedIndex();
			}
			
			private function changeHandler(event:ListEvent = null):void
			{
				_lancamento.formaPagamento = selectedItem.formaPagamento;
				_lancamento.conta = selectedItem.conta;
			}
			
			private function setSelectedIndex():void
			{
				selectedIndex = -1;
				var i:int;
				
				for (i = 0; i < _dataProvider.length; i++)
				{
					if (_dataProvider[i].formaPagamento == _lancamento.formaPagamento &&
						_lancamento.conta && _dataProvider[i].conta.id == _lancamento
						.conta.id)
					{
						selectedIndex = i;
						changeHandler();
						return;
					}
				}
				
				for (i = 0; i < _dataProvider.length; i++)
				{
					if (_dataProvider[i].formaPagamento == FormaPagamentoType.DEBITO)
					{
						selectedIndex = i;
						changeHandler();
						return;
					}
				}
				
				selectedIndex = 0;
				changeHandler();
			}
		]]>
	</mx:Script>
</mx:TileList>
