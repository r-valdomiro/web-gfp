<?xml version = "1.0" encoding = "utf-8"?>
<s:VGroup xmlns:fx = "http://ns.adobe.com/mxml/2009"
		  xmlns:s = "library://ns.adobe.com/flex/spark"
		  xmlns:mx = "library://ns.adobe.com/flex/mx"
		  xmlns:home = "gfp.view.home.*"
		  xmlns:menu = "gfp.view.menu.*"
		  xmlns:saldoPorConta = "gfp.view.saldoPorConta.*"
		  xmlns:custom = "common.spark.component.*">
	<fx:Script>
		<![CDATA[
			import common.custom.ICustomEvent;
			import common.util.DateUtil;
			
			import gfp.dto.LancamentoDto;
			import gfp.event.AppEvent;
			import gfp.event.TransacaoEvent;
			
			import mx.events.IndexChangedEvent;
			
			[Dispatcher]
			public var dispatcher:IEventDispatcher;
			
			[Bindable]
			private var newIndex:int = 0;
			
			[Bindable]
			private var oldIndex:int = 0;
			
			[EventHandler(event = "AppEvent.TO_TRANSACOES_ULTIMO_ANO")]
			[EventHandler(event = "AppEvent.TO_TRANSACOES_DIA")]
			public function navigatorTransacoes_showHandler(event:ICustomEvent =
															null):void
			{
				if (stackHome.selectedChild != navigatorTransacoes)
				{
					stackHome.selectedChild = navigatorTransacoes;
				}
				
				if (event && (event as Event).type == AppEvent.TO_TRANSACOES_ULTIMO_ANO)
				{
					var dto:LancamentoDto = event.object as LancamentoDto;
					dto.dataInicio = DateUtil.remove(DateUtil.today, 365);
					dto.dataFinal = DateUtil.today;
				}
				
				dispatcher.dispatchEvent(new AppEvent(AppEvent.TO_TRANSACOES, event ?
													  event.object : null));
			}
			
			private function buttonNovaTransacao_clickHandler():void
			{
				dispatcher.dispatchEvent(new TransacaoEvent(TransacaoEvent.EDITAR));
			}
			
			private function navigatorCadastros_showHandler():void
			{
				dispatcher.dispatchEvent(new AppEvent(AppEvent.TO_CADASTROS));
			}
			
			private function stackHome_changeHandler(event:IndexChangedEvent):void
			{
				oldIndex = event.oldIndex;
				newIndex = event.newIndex;
			}
			
			private function stackHome_childIndexChangeHandler(event:IndexChangedEvent):void
			{
//				oldIndex = event.oldIndex;
			}
		]]>
	</fx:Script>

	<fx:Declarations>
		<s:Parallel id = "showStackEffect">
			<s:Fade alphaFrom = "0"
					alphaTo = "1"/>

			<s:Scale scaleXFrom = ".7"
					 scaleXTo = "1"
					 scaleYFrom = ".7"
					 scaleYTo = "1"/>
		</s:Parallel>

		<s:Move id = "hideStackEffect"
				startDelay = "100"
				xTo = "{width}"
				yTo = "{height}"/>

		<s:Move id = "showVisaoGeralEffect"
				xFrom = "{-stackHome.width}"
				xTo = "0"/>

		<s:Move id = "hideVisaoGeralEffect"
				xFrom = "0"
				xTo = "{-stackHome.width}"/>

		<s:Move id = "showTransacoesEffect"
				xFrom = "{stackHome.width * (oldIndex == 0 ? 1 : -1)}"
				xTo = "0"/>

		<s:Move id = "hideTransacoesEffect"
				xFrom = "0"
				xTo = "{stackHome.width * (newIndex == 0 ? 1 : -1)}"/>

		<s:Move id = "showCadastrosEffect"
				xFrom = "{stackHome.width}"
				xTo = "0"/>

		<s:Move id = "hideCadastrosEffect"
				xFrom = "0"
				xTo = "{stackHome.width}"/>
	</fx:Declarations>

	<s:HGroup width = "100%"
			  height = "100%">
		<s:VGroup width = "20%"
				  height = "100%">
			<saldoPorConta:SaldoPorContaView width = "100%"
											 height = "100%"/>

			<custom:CustomButton id = "buttonNovaTransacao"
								 label = "Nova Transação"
								 click = "buttonNovaTransacao_clickHandler()"
								 width = "100%"
								 styleName = "styleButtonAdd"/>
		</s:VGroup>

		<mx:ViewStack id = "stackHome"
					  width = "80%"
					  height = "100%"
					  change = "stackHome_changeHandler(event)"
					  childIndexChange = "stackHome_childIndexChangeHandler(event)">
			<s:NavigatorContent id = "navigatorDashboard"
								label = "Visão Geral"
								width = "100%"
								height = "100%"
								showEffect = "{showVisaoGeralEffect}"
								hideEffect = "{hideVisaoGeralEffect}">
				<home:DashboardView id = "dashboardView"
									width = "100%"
									height = "100%"/>
			</s:NavigatorContent>

			<s:NavigatorContent id = "navigatorTransacoes"
								label = "Transações"
								width = "100%"
								height = "100%"
								showEffect = "{showTransacoesEffect}"
								hideEffect = "{hideTransacoesEffect}"
								show = "navigatorTransacoes_showHandler()">
				<home:TransacoesView id = "transacoesView"
									 width = "100%"
									 height = "100%"/>
			</s:NavigatorContent>

			<s:NavigatorContent id = "navigatorCadastros"
								label = "Cadastros"
								width = "100%"
								height = "100%"
								showEffect = "{showCadastrosEffect}"
								hideEffect = "{hideCadastrosEffect}"
								show = "navigatorCadastros_showHandler()">
				<home:CadastrosView id = "cadastrosView"
									width = "100%"
									height = "100%"/>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:HGroup>
</s:VGroup>
