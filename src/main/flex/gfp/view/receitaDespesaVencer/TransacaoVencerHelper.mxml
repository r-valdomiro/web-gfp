<?xml version = "1.0" encoding = "utf-8"?>
<s:VGroup xmlns:fx = "http://ns.adobe.com/mxml/2009"
		  xmlns:s = "library://ns.adobe.com/flex/spark"
		  xmlns:mx = "library://ns.adobe.com/flex/mx"
		  xmlns:serviceFeedback = "common.spark.component.serviceFeedback.*">
	<fx:Script>
		<![CDATA[
			import common.spark.component.serviceFeedback.skins.LoadingWithBGTextSkin;
			import common.util.NumberUtil;
			
			import gfp.model.Lancamento;
			
			import mx.collections.ArrayCollection;
			
			public function set dataProvider(dataProvider:ArrayCollection):void
			{
				gridLancamentos.dataProvider = dataProvider;
				labelTotal.text = "PrÃ³ximos 15 dias: " + NumberUtil.formatMoney(calcularTotal());
			}
			
			private function calcularTotal():Number
			{
				var result:Number = 0;
				
				for each (var lancamento:Lancamento in gridLancamentos.dataProvider
					as ArrayCollection)
				{
					result += lancamento.valorOriginal;
				}
				
				return result;
			}
		]]>
	</fx:Script>

	<s:VGroup width = "100%"
			  height = "100%">
		<s:HGroup verticalAlign = "bottom">
			<s:Image id = "image"/>

			<s:VGroup>
				<s:Label id = "labelDescricao"
						 fontFamily = "Title"
						 fontSize = "14"
						 color = "#014C6B"/>

				<s:Label id = "labelTotal"/>
			</s:VGroup>
		</s:HGroup>

		<s:Group width = "100%"
				 height = "100%">
			<mx:DataGrid id = "gridLancamentos"
						 width = "100%"
						 height = "100%"
						 showHeaders = "false"
						 selectable = "false"
						 alternatingItemColors = "[#eef4fb, #eef4fb]"
						 borderVisible = "false"
						 horizontalGridLineColor = "#c8c8c8"
						 horizontalGridLines = "true">
				<mx:columns>
					<mx:DataGridColumn itemRenderer = "gfp.view.receitaDespesaVencer.TransacaoVencerRenderer"
									   width = "440"/>

					<mx:DataGridColumn itemRenderer = "gfp.view.transacao.TransacaoActionRenderer"
									   width = "80"/>
				</mx:columns>
			</mx:DataGrid>

			<serviceFeedback:ServiceFeedback watchForCall = "listarReceitasVencer"
											 skinClass = "common.spark.component.serviceFeedback.skins.LoadingWithBGTextSkin"
											 width = "100%"
											 height = "100%"/>

			<serviceFeedback:ServiceFeedback watchForCall = "listarDespesasVencer"
											 skinClass = "common.spark.component.serviceFeedback.skins.LoadingWithBGTextSkin"
											 width = "100%"
											 height = "100%"/>
		</s:Group>
	</s:VGroup>
</s:VGroup>
