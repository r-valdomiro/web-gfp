<?xml version = "1.0" encoding = "utf-8"?>
<s:MXDataGridItemRenderer xmlns:fx = "http://ns.adobe.com/mxml/2009"
						  xmlns:s = "library://ns.adobe.com/flex/spark"
						  xmlns:mx = "library://ns.adobe.com/flex/mx"
						  dataChange = "dataChangeHandler(event)">
	<fx:Script>
		<![CDATA[
			import assets.images.ImageUtil;
			
			import common.custom.CustomEvent;
			import common.util.DateUtil;
			import common.util.NumberUtil;
			import common.util.StringUtil;
			
			import gfp.dto.LancamentoDto;
			import gfp.event.AppEvent;
			import gfp.helper.LancamentoHelper;
			import gfp.model.Lancamento;
			import gfp.type.FormaPagamentoType;
			
			import mx.events.FlexEvent;
			
			override public function set data(value:Object):void
			{
				super.data = value;
			}
			
			[Dispatcher]
			public var dispatcher:IEventDispatcher;
			
			private function dataChangeHandler(event:FlexEvent):void
			{
				var o:Lancamento = data as Lancamento;
				var compareHoje:int = DateUtil.compareToday(o.dataPrevisaoPagamento) *
					-1;
				var pagamentoCartaoCredito:Boolean = o.formaPagamento >= FormaPagamentoType
					.CREDITO_MASTERCARD;
				var tooltip:String = "Vencimento: " + DateUtil.formatSimple(o.dataVencimento) +
					"<br/>Previsão Pagamento: " + DateUtil.formatSimple(o.dataPrevisaoPagamento) +
					(!o.dataPagamento ? " " + LancamentoHelper.intervaloPrevisaoPagamento(o) :
					"");
				
				if (compareHoje >= 0)
				{
					if (!o.dataPagamento)
					{
						labelPrevisaoPagamento.toolTip = tooltip + (compareHoje >
							0 ? ("Vencida à " + compareHoje + StringUtil.pluralize(" dia"
																				   , compareHoje)) :
							"Vencendo hoje");
						labelPrevisaoPagamento.setStyle("color", 0xff0000);
					}
					else if ((!pagamentoCartaoCredito && DateUtil.compareDate(o.dataPagamento
																			  , o
																			  .dataVencimento) <=
						0) || (pagamentoCartaoCredito && DateUtil.compareDate(o.dataPagamento
																			  , o
																			  .dataPrevisaoPagamento) <=
						0))
					{
						labelPrevisaoPagamento.toolTip = tooltip + "<br/>Pagamento: " +
							DateUtil.formatSimple(o.dataPagamento) + " - em dia";
						labelPrevisaoPagamento.setStyle("color", 0x138b0d);
					}
					else
					{
						var dif:int = DateUtil.compareDate(o.dataPagamento, !pagamentoCartaoCredito ?
														   o.dataVencimento : o.dataPrevisaoPagamento);
						
						labelPrevisaoPagamento.toolTip = tooltip + "<br/>Pagamento: " +
							DateUtil.formatSimple(o.dataPagamento) + " - " + dif +
							StringUtil.pluralize(" dia", dif) + " de atraso";
						labelPrevisaoPagamento.setStyle("color", 0xd59600);
					}
				}
				else
				{
					if (o.dataPagamento && DateUtil.compareDate(o.dataPagamento, !pagamentoCartaoCredito ?
																o.dataVencimento :
																o.dataPrevisaoPagamento) <=
						0)
					{
						labelPrevisaoPagamento.toolTip = tooltip + "<br/>Pagamento: " +
							DateUtil.formatSimple(o.dataPagamento) + " - em dia";
						labelPrevisaoPagamento.setStyle("color", 0x138b0d);
					}
					else
					{
						labelPrevisaoPagamento.toolTip = tooltip; // + " [" + DateUtil
//							.compareToday(o.dataPrevisaoPagamento) + StringUtil.pluralize(" dia"
//																						  , DateUtil
//																						  .compareToday(o
//																										.dataPrevisaoPagamento)) +
//							"]";
						labelPrevisaoPagamento.setStyle("color", 0x828282);
					}
				}
				
				if (o.formaPagamento == FormaPagamentoType.CHEQUE)
				{
					imageFormaPagamento.source = ImageUtil.CHEQUE32;
					descricaoFormaPagamento.text = "Cheque";
				}
				else if (o.formaPagamento == FormaPagamentoType.DEBITO || o.formaPagamento ==
					FormaPagamentoType.CREDITO_MASTERCARD || o.formaPagamento ==
					FormaPagamentoType.CREDITO_VISA)
				{
					imageFormaPagamento.source = ImageUtil.CARD32;
					
					if (o.formaPagamento == FormaPagamentoType.DEBITO)
					{
						descricaoFormaPagamento.text = "Débito";
					}
					else if (o.formaPagamento == FormaPagamentoType.CREDITO_MASTERCARD)
					{
						descricaoFormaPagamento.text = "Mastercard";
					}
					else if (o.formaPagamento == FormaPagamentoType.CREDITO_VISA)
					{
						descricaoFormaPagamento.text = "Visa";
					}
				}
				else
				{
					imageFormaPagamento.source = ImageUtil.MONEY32;
					descricaoFormaPagamento.text = "Dinheiro";
				}
				
				super.invalidateDisplayList();
			}
			
			private function labelCategoria_clickHandler(event:MouseEvent):void
			{
				var dto:LancamentoDto = new LancamentoDto();
				dto.categoria = (data as Lancamento).categoria.id;
				dispatcher.dispatchEvent(new AppEvent(AppEvent.TO_TRANSACOES_ULTIMO_ANO
													  , dto));
			}
		]]>
	</fx:Script>

	<s:HGroup width = "100%"
			  paddingLeft = "2"
			  paddingRight = "5"
			  paddingTop = "2"
			  paddingBottom = "2">
		<s:VGroup width = "70"
				  horizontalAlign = "center">
			<s:Label id = "labelPrevisaoPagamento"
					 text = "{DateUtil.formatSimple((data as Lancamento).dataPrevisaoPagamento)}"/>

			<s:Label id = "labelVencimento"
					 text = "{!(data as Lancamento).dataPagamento ? LancamentoHelper.intervaloPrevisaoPagamento(data as Lancamento).substr(3) : ''}"
					 width = "100%"
					 textAlign = "center"
					 fontSize = "10"/>
		</s:VGroup>

		<s:Image id = "imageFormaPagamento"/>

		<s:VGroup width = "100%">
			<s:Label id = "labelCategoria"
					 click = "labelCategoria_clickHandler(event)"
					 toolTip = "Visualizar transações nos últimos 12 meses"
					 buttonMode = "true"
					 useHandCursor = "true"
					 text = "{(data as Lancamento).categoria + ((data as Lancamento).parcelaQuantidade &gt; 1 ? ' (' + (data as Lancamento).parcelaNumero + '/' + (data as Lancamento).parcelaQuantidade + ')' : '')}"/>

			<s:HGroup>
				<s:Label id = "descricaoFormaPagamento"
						 fontSize = "10"
						 width = "50"/>

				<s:Label text = "{(data as Lancamento).conta}"
						 fontSize = "10"/>
			</s:HGroup>
		</s:VGroup>

		<s:VGroup height = "100%"
				  verticalAlign = "middle">
			<s:Label text = "{NumberUtil.formatNumber((data as Lancamento).valorOriginal, 2)}"
					 textAlign = "right"
					 fontSize = "14"
					 width = "70"/>
		</s:VGroup>
	</s:HGroup>
</s:MXDataGridItemRenderer>
